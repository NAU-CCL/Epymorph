[project]
name = "epymorph"

version = "0.0.0"

authors = [
  { name = "Tyler Coles", email = "tyler.coles@nau.edu" },
  { name = "Frank Burkhart" },
  { name = "Alex Nez" },
  { name = "Trevor Johnson" },
  { name = "Jarom Craghead" },
  { name = "Ajay Shyam Pasam" },
  { name = "Sindhura Paruchuri" },
  { name = "Izaac Molina" },
  { name = "Meaghan Freund" },
]

description = "EpiMoRPH disease modeling"

readme = "README.md"

requires-python = ">=3.11"

# license = ""

keywords = ["epidemiology", "disease modeling", "metapopulation"]

classifiers = [
  "Programming Language :: Python :: 3",
  "Operating System :: OS Independent",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
  "Typing :: Typed",
]

dependencies = [
  "matplotlib~=3.9.0",
  "numpy~=1.26.4",
  "sympy~=1.12.1",
  "psutil~=5.9.8",
  "pandas[excel]~=2.2.2",
  "geopandas~=0.14.4",
  "census~=0.8.22",
  "jsonpickle~=3.2.1",
  "platformdirs~=4.2.2",
  "graphviz~=0.20.3",
  "typing_extensions~=4.12.2",
  "ipython~=8.26.0",
  "rasterio~=1.3.11",
  "humanize~=4.10.0",
  "sparklines~=0.5.0",
  "scipy~=1.14.1",
]

[dependency-groups]
dev = [
    "ruff>=0.9.0",
    "ipykernel>=6.29.5",
    "setuptools>=74.0.0",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
]

[project.scripts]
epymorph = "epymorph.__main__:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--import-mode=importlib",
]

[build-system]
requires = ["setuptools>=74.0.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["epymorph*"]

[tool.setuptools.package-data]
"epymorph" = ["py.typed"]

[tool.pyright]
exclude = [
  "**/__pycache__",
  "**/.*",
  "build",
]
typeCheckingMode = "standard"
# Pyright doesn't seem to be able to handle sympy operators,
# so until that's fixed ignore operator errors.
reportOperatorIssue = "none"

[tool.ruff]
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
  "F", # (basic pyflakes lints)
  "E", # (basic pycodestyle lints)
  "A", # (don't shadow builtins)
  "I", # (sort imports)
  "T10", # (no debugger directives laying around)
  "ISC", # (clean string concat usage)
  "PIE", # (general improvements)
  "PERF", # (performance traps)
  "PTH", # (prefer pathlib)
  "NPY", # (numpy linting)
  "PD", # (pandas linting)
  "W", # (no extra whitespace)
  "S", # (security rules)
  "BLE", # (catching Exception is too general)
  "PT", # (pytest)

  # NOTE: rules I'd like to enable some day are below, commented out
  # "ERA", # (no commented code)
  # "C4", # (clean comprehensions usage)
  # "T20", (no extra print statements laying around)
  # "UP", (use modern python)
  # "FURB", (use modern python)
  # "B", (possible bugs)
  # "D", (enforced documentation)
  # "DOC", (enforced documentation; complementary with D)
  # "ANN", (enforced type annotations)
  # "N", (naming conventions)
  # "RET", (clean return handling)
  # "SIM", (code simplifications)
  # "SLF", (prevent private member access)
  # "ARG", (unused args)
  # "COM", (comma consistency; maybe: is there a way to stop this from demanding trailing commas in function calls?)
  # "TD", (rigorous formatting of TODO comments)
  # "RUF", (general linting)
  # "TRY", (error handling; might need to be selective with this one)
]

ignore = [
  "E741", # (ambiguous names: false positives for common compartment name "I")
]

[tool.ruff.lint.extend-per-file-ignores]
# Allow star imports in tests and notebooks.
# I001 (import sort) appears to be broken in notebooks.
# S101 we are allowed to use `assert` in pytest
"tests/**/*_test.py" = ["F403", "F405", "S101"]
"*.ipynb" = ["F403", "F405", "I001"]
