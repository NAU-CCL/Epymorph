# Builds and releases to Github whenever a "v" tag is added.

# Useful docs:
# https://docs.github.com/en/repositories/releasing-projects-on-github/about-releases
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
# https://docs.github.com/en/rest/releases/releases?apiVersion=2022-11-28
# https://cli.github.com/manual/gh_release_create
# https://docs.astral.sh/uv/guides/integration/github/
# https://docs.astral.sh/ruff/integrations/#github-actions

name: Build and release to Github
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          version: "0.5.x"
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Create cache directory
        run: mkdir -p .cache

      - name: Download cache files from S3
        run: aws s3 sync s3://epymorph-gha-cache .cache

      - name: Set CACHE_DIR environment variable
        run: echo "EPYMORPH_CACHE_PATH=$(realpath .cache)" >> $GITHUB_ENV

      - name: Install dependencies
        run: uv sync --frozen --all-extras --dev

      - name: Run unit tests
        run: uv run python -m unittest discover -v -s "./epymorph" -p "*_test.py"

      - name: Update pyproject.toml version
        run: |
          version="${GITHUB_REF#refs/tags/v}"

          sed -i "s/version = .*/version = \"${version}\"/" pyproject.toml

      - name: Build project
        run: uv build

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          version="${GITHUB_REF#refs/tags/v}"
          
          # release assets
          wheel_file="./dist/epymorph-${version}-py3-none-any.whl"
          source_file="./dist/epymorph-${version}.tar.gz"

          gh release create "v${version}" --generate-notes $wheel_file $source_file
