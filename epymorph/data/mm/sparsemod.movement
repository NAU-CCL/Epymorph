[move-steps: per-day=2; duration=[2/3, 1/3]]

[predef: function = 
def sparse_movement():
    """Sparsemod movement model"""
    distances = geo['distances']
    n = nodes
    dispersal_kernel = zeros((n, n))
    for i in range(n):
        for j in range(n):
            dispersal_kernel[i, j] = 1 / \
                (exp(distances[i, j]*1/param['phi']))
        dispersal_kernel[i, ] = dispersal_kernel[i, ] / \
            sum(dispersal_kernel[i, ])

    return {'dispersal_kernel': dispersal_kernel}
]

# Commuter movement
[mtype: days=all; leave=1; duration=03   d; return=2; function=
def sparse_commuters(t, src):
    actual = geo['commuters'][src]
    return multinomial(actual, predef['dispersal_kernel'][src, ...])
]
