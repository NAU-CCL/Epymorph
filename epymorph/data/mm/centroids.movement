[move-steps: per-day=2; duration=[1/3, 2/3]]

[predef: function = 
def centroids_movement():
    centroid = geo['centroid']
    distance = pairwise_haversine(centroid['longitude'], centroid['latitude'])
    dispersal_kernel = row_normalize(1 / np.exp(distance / param['phi']))
    return { 'dispersal_kernel': dispersal_kernel }
]

# Commuter movement: assume 10% of the population are commuters
[mtype: days=all; leave=1; duration=0d; return=2; function=
def centroids_commuters(t):
    n_commuters = np.floor(geo['population'] * 0.1).astype(SimDType)
    return np.multinomial(n_commuters, predef['dispersal_kernel'])
]
