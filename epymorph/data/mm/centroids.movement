[move-steps: per-day=2; duration=[1/3, 2/3]]

[predef: function = 
def centroids_movement():
    centroid = geo['centroid']
    distance = pairwise_haversine(centroid['longitude'], centroid['latitude'])
    dispersal_kernel = row_normalize(1 / np.exp(distance / param['phi']))
    return { 'dispersal_kernel': dispersal_kernel }
]

# Commuter movement
# TODO: this should be written in array form for performance reasons
[mtype: days=all; leave=1; duration=0d; return=2; function=
def sparse_commuters(t, src):
    actual = geo['population'][src] * 0.1
    return np.multinomial(actual, predef['dispersal_kernel'][src, :])
]
